<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Registration</title>
    <!-- Bootstrap CSS link -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
    <style>
        /* Custom styles specific to this page */
        .error-message {
            color: red;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card mt-5">
                    <div class="card-header">
                        <h2 class="text-center">User Registration</h2>
                    </div>
                    <div class="card-body">

                        <form id="register-form">
                            {% if error is not empty %}
                            <div class="alert alert-danger">
                              <ul>
                                {% for message in error %}
                                  <li>{{ message }}</li>
                                {% endfor %}
                              </ul>
                            </div>
                          {% endif %}
                            <div class="form-group">
                                <label for="firstname">First Name:</label>
                                <input type="text" class="form-control" id="firstname" name="firstname" required>
                            </div>
                            
                            <div class="form-group">
                                <label for="lastname">Last Name:</label>
                                <input type="text" class="form-control" id="lastname" name="lastname" required>
                            </div>
                            
                            <div class="form-group">
                                <label for="email">Email:</label>
                                <input type="email" class="form-control" id="email" name="email" required>
                            </div>
                            
                            <div class="form-group">
                                <label for="birthdate">Birthdate:</label>
                                <input type="date" class="form-control" id="birthdate" name="birthdate" required>
                            </div>
                            
                            <div class="form-group">
                                <label for="gender">Gender:</label>
                                <select class="form-control" id="gender" name="gender" required>
                                    <option value="male">Male</option>
                                    <option value="female">Female</option>
                                    <option value="other">Other</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label for="role">Role:</label>
                                <input type="text" class="form-control" id="role" name="role" required>
                            </div>
                            
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="driver_license" name="driver_license">
                                <label class="form-check-label" for="driver_license">Driver's License</label>
                            </div>
                            
                            <div class="form-group">
                                <label for="cin">CIN:</label>
                                <input type="text" class="form-control" id="cin" name="cin" required>
                            </div>
                            
                            <div class="form-group">
                                <label for="address">Address:</label>
                                <textarea class="form-control" id="address" name="address" required></textarea>
                            </div>
                            
                            <div class="form-group">
                                <label for="password">Password:</label>
                                <input type="password" class="form-control" id="password" name="password" required>
                            </div>
                            
                            <button type="submit" class="btn btn-primary">Register</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS and dependencies (optional) -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
          const dataForm = document.getElementById('register-form');
      
          dataForm.addEventListener('submit', async (event) => {
            event.preventDefault(); // Prevent default form submission
      
            const formData = new FormData(dataForm); // Create a FormData object from the form
            const jsonData = {}; // Create an empty object
      
            // Populate the jsonData object with the form data
            formData.forEach((value, key) => {
              jsonData[key] = value;
            });
      
            console.log('Sending data:', jsonData); // Debugging line
      
            try {
              const response = await fetch("{{ path('app_register') }}", {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json', // Important: Set the Content-Type header
                },
                body: JSON.stringify(jsonData), // Convert jsonData to a JSON string
              });
      
              const responseData = await response.json();
      
              if (!response.ok) {
                throw new Error('Network response was not ok: ' + JSON.stringify(responseData));
              }
      
              console.log('Success:', responseData); // Handle success response
      
              // Check if response contains success message or status
              if (responseData.message === 'Login successful') {
                // Redirect to profile or another page
                console.log(responseData.id);
                
                window.location.href = "{{ path('app_profile') }}?userId=" + responseData.id;  // Example redirect
              } else {
                // Show error message
                alert('Login failed: ' + (responseData.error ? responseData.error.join(', ') : 'Unknown error'));
              }
            } catch (error) {
              console.error('Error:', error); // Handle error response
              alert('An error occurred: ' + error.message); // Display error to user
            }
          });
        });
      </script>
</body>
</html>